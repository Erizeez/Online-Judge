代码框：支持撤销、重写操作。代码输入时留意格式。
――――――――――――――――――――――――――――――――――――
测试框：支持多组数据测试。格式如下：
	X输入XX
	#####		第一组数据
	X输出XX
	-----
	X输入XX
	#####		第二组数据
	X输出XX
    注意：数据末尾请勿添加-----结尾，数据本身严格注意格式（以防空格影响结果）
――――――――――――――――――――――――――――――――――――
时间限制：默认为1000ms，该数据以ms为单位。若超出时间限制，代码会被终止
    ，程序将返回TLE。
――――――――――――――――――――――――――――――――――――
内存限制：默认为1mb，该数据以mb为单位。若超出，将返回MLE。
    注意：内存限制仅仅判断内存是否超出设定范围，考虑大部分情况下，内存资源
    较为丰富，且有时间限制防止代码死循，故不对内存限制作出终止条件。
是否严格限制空格及换行：默认不严格限制。
――――――――――――――――――――――――――――――――――――
对于多测试点结果的说明：
    测试结束后会跳出测试结果，其中每组测试数据都会返回运行结果、运行时长以及
  运行时最大占用内存。
    测试结果会有一个概括判定，即综合每个测试点的结果给出一个最终结果。
    优先级如下：
        CE > WA > TLE > MLE > AC
    即在所有测试结果中，程序将返回优先级最高的结果。
――――――――――――――――――――――――――――――――――――
作弊码设定（彩蛋）:程序中有一段明显标注的代码，用于抚慰玻璃心。即若代码中含有
    ‘IWANTAC’的字符串，程序将立刻返回AC。任何一组数据都将显示AC。
――――――――――――――――――――――――――――――――――――
源码说明：
    为了实现OJ系统以及诸多要求，我们决定采用多进程以实现更精确的运行时间以及运
  行内存的监测。
    以下是本项目调用的库：subprocess（多进程），time，memory_subprofiler（内
  存监测），tkinter（图形界面）
    本项目分为三个部分：主体GUI、自定义库、缓存文件。
    主体GUI是程序运行的主体文件（gui.py），包括主界面图形化设置相关的代码以及
  相关调用函数。
    自定义库包括两个文件，main.py 和 codes_class.py两个文件，储存在根目录下的
  repository文件夹。
    缓存文件名为temp.py，位于根目录，用于储存测试代码，然后作为文件对象供给给subprocess下的
  Popen类。
具体注释仍需查阅源码。